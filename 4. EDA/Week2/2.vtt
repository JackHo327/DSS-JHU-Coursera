WEBVTT

1
00:00:00.900 --> 00:00:03.230
Lattice 绘图系统里包含所谓的面板函数

2
00:00:03.230 --> 00:00:06.460
当存在多个面板时

3
00:00:06.460 --> 00:00:10.724
这个函数可以让你在各个面板中分别进行绘图

4
00:00:10.724 --> 00:00:13.640
并分别对它们进行控制

5
00:00:13.640 --> 00:00:17.230
lattice 包带有许多默认的面板函数

6
00:00:17.230 --> 00:00:20.800
但是你也可以根据需要自定义各个面板中的行为

7
00:00:20.800 --> 00:00:23.000
基本上说 每个面板函数

8
00:00:23.000 --> 00:00:26.050
都会接受一个特定面板中数据点的 x/y 值

9
00:00:26.050 --> 00:00:26.750
都会接受一个特定面板中数据点的 x/y 值

10
00:00:26.750 --> 00:00:30.230
记住 每个面板代表数据的一个子集

11
00:00:30.230 --> 00:00:34.870
而这个子集是由你指定的条件变量所决定的

12
00:00:34.870 --> 00:00:37.990
所以对每个面板来说

13
00:00:37.990 --> 00:00:41.920
面板函数会接受对应图中点的 x/y 坐标

14
00:00:41.920 --> 00:00:43.710
你可以看到

15
00:00:43.710 --> 00:00:47.730
我在这里生成了一些遵循线性模型的随机数据

16
00:00:47.730 --> 00:00:49.410
然后我创建了一个分成 "Group 1" 和 "Group 2" 的因子

17
00:00:49.410 --> 00:00:52.430
然后我创建了一个分成 "Group 1" 和 "Group 2" 的因子

18
00:00:52.430 --> 00:00:56.360
现在我要在每个“组”中对 x 和 y 作图

19
00:00:56.360 --> 00:00:58.600
于是我得到了两个面板

20
00:00:58.600 --> 00:01:01.810
"Group 1" 看起来有很强的线性关系 而 "Group 2" 则看起来毫无关系

21
00:01:03.180 --> 00:01:06.320
大家可以看到我在这里通过 panel 参数

22
00:01:06.320 --> 00:01:09.190
调用了一个自定义面板函数

23
00:01:09.190 --> 00:01:12.080
这个函数的前两个参数是 x 和 y

24
00:01:12.080 --> 00:01:15.220
接着是 ... 代表其他可能传递的参数

25
00:01:16.530 --> 00:01:17.690
在我的自定义面板函数中

26
00:01:17.690 --> 00:01:19.310
我首先调用了默认的 xyplot 面板函数使数据点出现

27
00:01:19.310 --> 00:01:23.150
我首先调用了默认的 xyplot 面板函数使数据点出现

28
00:01:23.150 --> 00:01:26.450
然后在每个面板添加了一个水平线

29
00:01:26.450 --> 00:01:30.290
代表那个面板中 y 的中位数

30
00:01:30.290 --> 00:01:32.870
现在我看到在每个面板中

31
00:01:32.870 --> 00:01:36.020
y 的中位数处有一条虚线

32
00:01:38.900 --> 00:01:40.861
我能做的另一件很棒的事是

33
00:01:40.861 --> 00:01:42.928
相比于添加中位数 添加一条回归直线可能更加有用

34
00:01:42.928 --> 00:01:45.260
这样你就可以看到

35
00:01:45.260 --> 00:01:47.890
在每个面板中 x 和 y 的线性关系

36
00:01:47.890 --> 00:01:50.487
所以我在这里又传递了一个自定义函数

37
00:01:50.487 --> 00:01:52.077
我首先调用了 panel.xyplot()

38
00:01:52.077 --> 00:01:54.250
这样点就会出现

39
00:01:54.250 --> 00:01:57.550
坐标轴以及标签等等东西也都会出现

40
00:01:57.550 --> 00:02:03.110
然后调用 panel.lmline() 来给面板添加回归线

41
00:02:03.110 --> 00:02:03.980
有一件事值得注意

42
00:02:03.980 --> 00:02:05.660
在 Lattice 绘图系统中

43
00:02:05.660 --> 00:02:08.350
你不能使用基础绘图系统中得任何一个注释函数

44
00:02:08.350 --> 00:02:11.010
实际上基础绘图系统中的任何一个函数

45
00:02:11.010 --> 00:02:13.670
在这里都不能使用

46
00:02:13.670 --> 00:02:18.310
一般来说 你不能混用不同绘图系统中的函数

47
00:02:18.310 --> 00:02:19.780
你只能用当前绘图系统中的

48
00:02:19.780 --> 00:02:22.080
所有相关函数

49
00:02:23.620 --> 00:02:29.480
再来快速讲一个大数据集的例子

50
00:02:29.480 --> 00:02:31.670
这个数据集来自在巴尔的摩市进行的

51
00:02:31.670 --> 00:02:34.660
一项对老鼠过敏原和哮喘人群的研究 (MAACS)

52
00:02:34.660 --> 00:02:39.270
这项研究观察了巴尔的摩市的哮喘儿童的室内居住环境

53
00:02:39.270 --> 00:02:42.080
发现这其中许多儿童都对老鼠过敏

54
00:02:42.080 --> 00:02:46.080
这是一个观察性研究 研究包括一次基准家访

55
00:02:46.080 --> 00:02:47.740
之后的一年中每三个月再进行一次家访

56
00:02:47.740 --> 00:02:49.570
所以总共五次家访

57
00:02:51.340 --> 00:02:54.880
你可能会想问一个问题

58
00:02:54.880 --> 00:02:57.860
对每个受试者来说 室内空气中过敏原数量是如何随时间变化的

59
00:02:57.860 --> 00:03:00.770
基本上 我想要做的就是画一个图

60
00:03:00.770 --> 00:03:04.880
图中包含每个受试者每次家访的室内空气中污染源数量

61
00:03:05.890 --> 00:03:13.240
在数据集中有150个受试者 每个都进行过五次家访

62
00:03:13.240 --> 00:03:18.597
所以我们要观察的就是这里的750个数据点

63
00:03:18.597 --> 00:03:20.050
如何快速实现目标呢？

64
00:03:20.050 --> 00:03:20.410
如何快速实现目标呢？

65
00:03:20.410 --> 00:03:22.620
实际上 实现目标的一个简单方法

66
00:03:22.620 --> 00:03:26.050
就是作 x/y 图 利用多面板 Lattice 绘图

67
00:03:26.050 --> 00:03:28.720
这就是我们作出的图 你可以看一下这些数据

68
00:03:28.720 --> 00:03:32.730
这是研究中所有的受试者

69
00:03:32.730 --> 00:03:35.180
这是他们的空气中老鼠过敏原水平

70
00:03:35.180 --> 00:03:38.880
这里用的是老鼠过敏原水平的对数

71
00:03:38.880 --> 00:03:41.840
你可以看到每个人的变化

72
00:03:41.840 --> 00:03:45.180
在每一个面板中 你可以看到他们的过敏原水平或升或降

73
00:03:45.180 --> 00:03:46.550
或随每次家访不断变化

74
00:03:46.550 --> 00:03:50.930
你可以比较不同受试者的变化

75
00:03:50.930 --> 00:03:52.870
有些人的过敏原水平非常高

76
00:03:52.870 --> 00:03:55.258
而有些人的水平则比较低

77
00:03:55.258 --> 00:03:56.870
所以这里不仅可以看到每个个体的变化

78
00:03:56.870 --> 00:03:59.548
也可以进行横向对比

79
00:03:59.548 --> 00:04:02.252
你也可以看到很多人的数据都有缺失值

80
00:04:02.252 --> 00:04:05.551
不是所有人都有五个值 有些人仅仅只有两个值或者一个值

81
00:04:05.551 --> 00:04:07.695
可以继续跟进这些受试者

82
00:04:07.695 --> 00:04:10.375
看看他们为什么只有四个或三个值

83
00:04:10.375 --> 00:04:12.681
可能也是有用的

84
00:04:12.681 --> 00:04:15.633
可以看到有些受试者每次的变化非常大

85
00:04:15.633 --> 00:04:19.138
两次家访相比 过敏原水平上升或降低了很多

86
00:04:19.138 --> 00:04:21.152
而有些受试者几乎没有一点变化

87
00:04:21.152 --> 00:04:23.820
每次家访时的老鼠过敏原水平都差不多

88
00:04:23.820 --> 00:04:25.910
你可以继续跟进其中的某些模块

89
00:04:25.910 --> 00:04:28.300
也可以不去管它

90
00:04:28.300 --> 00:04:30.510
这取决于你到底对什么感兴趣

91
00:04:30.510 --> 00:04:32.780
可以看到 基本上通过调用一个或两个函数

92
00:04:32.780 --> 00:04:35.410
你就可以绘出这样庞大的一张图

93
00:04:35.410 --> 00:04:38.550
不需要用很多代码你就可以看到很多数据

94
00:04:38.550 --> 00:04:40.300
这就是 Lattice 绘图系统的一个强大之处

95
00:04:40.300 --> 00:04:43.230
只要数据从某种程度上说是格式化的

96
00:04:43.230 --> 00:04:48.610
Lattice 绘图系统就可以让你对大量的数据进行观测

97
00:04:48.610 --> 00:04:52.110
那以上就是对每个受试者来说

98
00:04:52.110 --> 00:04:56.620
家访次数和空气中老鼠过敏原水平对数的关系

99
00:04:56.620 --> 00:04:58.760
对这个案例来说

100
00:04:58.760 --> 00:05:00.650
这是总结所有数据的一个快速方法

101
00:05:01.890 --> 00:05:05.230
现在来做个小结 我们通过调用一个核心 lattice 函数

102
00:05:05.230 --> 00:05:09.522
像是 xyplot() 来构建 lattice 图

103
00:05:09.522 --> 00:05:12.018
lattice 图的一个优点是

104
00:05:12.018 --> 00:05:15.396
边界、间距和标签这类东西是自动设置的

105
00:05:15.396 --> 00:05:17.277
所以不像基础绘图系统

106
00:05:17.277 --> 00:05:19.899
有边界、间距、mtext 和外边界的选项

107
00:05:19.899 --> 00:05:22.293
有边界、间距、mtext 和外边界的选项

108
00:05:22.293 --> 00:05:24.972
然后每次使用的时候都要设置它们

109
00:05:24.972 --> 00:05:27.080
在 Lattice 绘图系统中

110
00:05:27.080 --> 00:05:29.076
你不需要考虑太多

111
00:05:29.076 --> 00:05:31.473
当你需要通过控制某些变量来观测数据的时候

112
00:05:31.473 --> 00:05:34.227
Lattice 绘图系统是很理想的选择

113
00:05:34.227 --> 00:05:37.287
意思就是说 你想观察某种关系

114
00:05:37.287 --> 00:05:40.040
不过是在另外一个变量作为条件的情况下

115
00:05:41.290 --> 00:05:42.910
也就是说 你想看的还是同样的图

116
00:05:42.910 --> 00:05:45.000
但是在许多不同条件下的

117
00:05:46.540 --> 00:05:49.480
你也可以根据自己的需要使用面板函数

118
00:05:49.480 --> 00:05:52.350
修改每个函数中的参数

119
00:05:52.350 --> 00:05:53.970
它可以让你根据需要

120
00:05:53.970 --> 00:05:55.908
绘制属于自己的面板

121
00:05:55.908 --> 00:05:59.590
我还发现 Lattice 绘图系统在查看大量数据的时候

122
00:05:59.590 --> 00:06:02.430
非常快速

123
00:06:02.430 --> 00:06:06.330
最后 我鼓励大家尝试一下其它函数

124
00:06:06.330 --> 00:06:08.750
像是bwplot() boxplot() 和 scatter()

125
00:06:08.750 --> 00:06:10.770
看看它们是如何工作的
【教育无边界字幕组】迈迈的手套 | LennyBear | hazard1990