WEBVTT

1
00:00:00.323 --> 00:00:04.013
在 R 中 kmeans 函数是我们用来执行 K 均值算法的函数

2
00:00:04.013 --> 00:00:08.860
在 R 中 kmeans 函数是我们用来执行 K 均值算法的函数

3
00:00:08.860 --> 00:00:10.660
这里我可以用一个简单的数据框演示下它的用法

4
00:00:10.660 --> 00:00:13.907
这里我可以用一个简单的数据框演示下它的用法

5
00:00:13.907 --> 00:00:15.749
这里有一个二维的数据框

6
00:00:15.749 --> 00:00:19.140
我对 dataFrame 调用 kmeans() 告诉它有3个几何中心

7
00:00:19.140 --> 00:00:23.322
于是这里有3个几何中心

8
00:00:23.322 --> 00:00:26.274
kmeans() 返回的是一个列表

9
00:00:26.274 --> 00:00:27.460
里面有许多不同的元素

10
00:00:27.460 --> 00:00:30.540
举个例子 最重要的元素是 cluster

11
00:00:30.540 --> 00:00:32.724
这里你可以看到

12
00:00:32.724 --> 00:00:35.020
当我打印输出 cluster 元素的时候

13
00:00:35.020 --> 00:00:37.570
它是一个从1到3的数字组成的向量

14
00:00:37.570 --> 00:00:41.940
对于我传入的数据框中的每个数据点

15
00:00:41.940 --> 00:00:45.170
它告诉我这个数据点属于哪个簇

16
00:00:45.170 --> 00:00:47.080
因此你可以看到 前4个点属于3号簇

17
00:00:47.080 --> 00:00:51.470
接下来的4个属于1号簇

18
00:00:51.470 --> 00:00:53.040
再接下来的4个属于2号簇

19
00:00:53.040 --> 00:00:55.370
如果你观察 names() 的输出

20
00:00:55.370 --> 00:00:57.377
可以看到 kmeans() 返回的另一对象

21
00:00:57.377 --> 00:00:59.640
叫做 centers

22
00:00:59.640 --> 00:01:03.570
它告诉你几何中心在空间中的位置

23
00:01:08.032 --> 00:01:11.280
如果你想要绘制 kmeans() 的结果

24
00:01:11.280 --> 00:01:14.070
你要做的第一件事就是在你的数据上运行 kmeans()

25
00:01:14.070 --> 00:01:16.000
这里 我只要绘制数据

26
00:01:16.000 --> 00:01:19.020
因此我做的第一件事就是绘制数据 用 plot(x,y)

27
00:01:19.020 --> 00:01:24.240
接下来我根据数据点所在的簇给它们上色

28
00:01:24.240 --> 00:01:25.430
你可以看到

29
00:01:25.430 --> 00:01:28.090
我让 col 参数等于簇的数量

30
00:01:28.090 --> 00:01:30.110
接着 我使用 points 函数在图上添加中心

31
00:01:30.110 --> 00:01:34.250
也就是簇的几何中心

32
00:01:34.250 --> 00:01:37.070
这些几何中心我用加号表示

33
00:01:37.070 --> 00:01:40.190
这里我绘制了数据 以及 K 均值聚类的结果

34
00:01:41.620 --> 00:01:44.060
最后 另一种把 K 均值之类的算法

35
00:01:44.060 --> 00:01:46.605
得出的聚类信息可视化的方法是

36
00:01:46.605 --> 00:01:49.080
使用热图函数

37
00:01:49.080 --> 00:01:50.980
或者我应该说使用热图 (将信息可视化)

38
00:01:50.980 --> 00:01:52.980
这里我用了同样的数据

39
00:01:52.980 --> 00:01:56.040
提取出了一个不同的随机样本

40
00:01:56.040 --> 00:01:59.350
我对它的重置取样再次运行 kmeans()

41
00:01:59.350 --> 00:02:00.696
依然有3个中心

42
00:02:00.696 --> 00:02:03.628
我把它储存在一个叫做 kmeansobj2 的对象里

43
00:02:03.628 --> 00:02:06.030
现在我要做一个数据的图像

44
00:02:06.030 --> 00:02:09.280
这里左边的第一个图就是原始数据的热图

45
00:02:10.550 --> 00:02:12.630
右手边的是我重新排列过的数据列

46
00:02:12.630 --> 00:02:16.410
对不起

47
00:02:16.410 --> 00:02:18.260
应该是数据框的行

48
00:02:18.260 --> 00:02:21.040
也就是按照簇进行归类

49
00:02:21.040 --> 00:02:24.980
这里 如果你从上往下观察这个矩阵

50
00:02:24.980 --> 00:02:26.900
你会看到同簇的数据点聚集在一起

51
00:02:26.900 --> 00:02:30.200
相互靠近

52
00:02:30.200 --> 00:02:33.111
你可以用热图看高维的数据

53
00:02:33.111 --> 00:02:37.300
高维图像类型的数据 或者矩阵类型的数据

54
00:02:37.300 --> 00:02:41.276
通过重新排列行和列

55
00:02:41.276 --> 00:02:45.275
来观察那些或近或远的簇

56
00:02:45.275 --> 00:02:47.595
也就是更有条理地来观察你的数据

57
00:02:47.595 --> 00:02:50.031
也就是更有条理地来观察你的数据

58
00:02:50.031 --> 00:02:52.759
这样更便于寻找数据模式

59
00:02:52.759 --> 00:02:54.442
当我们讲到等级聚类 (hierarchical clustering) 的时候

60
00:02:54.442 --> 00:02:57.298
我们会更多地涉及这部分的内容

61
00:02:57.298 --> 00:02:59.389
再次说明 你可以在其它类型的聚类算法的可视化中使用热图

62
00:02:59.389 --> 00:03:02.120
就像 K 均值一样

63
00:03:02.120 --> 00:03:05.939
那总的来说 K 均值是一个很实用的算法

64
00:03:05.939 --> 00:03:10.860
 无论是用于整理 还是寻找蕴含最终数据的模式

65
00:03:10.860 --> 00:03:14.550
一些需要注意的东西是 你需要知道簇的数量

66
00:03:14.550 --> 00:03:15.670
至少你必须大概确定

67
00:03:15.670 --> 00:03:18.770
需要指定多少个簇

68
00:03:18.770 --> 00:03:21.540
你可以尝试多次

69
00:03:21.540 --> 00:03:23.670
找出看起来最好的数据模式

70
00:03:23.670 --> 00:03:26.898
但是它没有捷径

71
00:03:26.898 --> 00:03:28.893
接下来你需要挑出那些簇

72
00:03:28.893 --> 00:03:31.593
通过肉眼或者是其它方法

73
00:03:31.593 --> 00:03:34.500
有一些算法可以决定需要的簇的数量

74
00:03:34.500 --> 00:03:37.179
使用交叉验证

75
00:03:37.179 --> 00:03:39.783
信息理论 (information theory) 或者其它类型的度量

76
00:03:39.783 --> 00:03:40.563
这里有一个关于决定簇数量的链接

77
00:03:40.563 --> 00:03:43.219
这里有一个关于决定簇数量的链接

78
00:03:43.219 --> 00:03:47.323
K 均值不是一个确定性算法

79
00:03:47.323 --> 00:03:49.318
依据它所执行的方式

80
00:03:49.318 --> 00:03:51.541
有时候那些起始点 (几何中心) 是随机选择的

81
00:03:51.541 --> 00:03:55.018
因此多次运行 K 均值算法通常会很有帮助

82
00:03:55.018 --> 00:04:01.160
这样可以帮助你确定不会得到一个不稳定的终点

83
00:04:01.160 --> 00:04:03.120
举个例子 如果你运行了三次

84
00:04:03.120 --> 00:04:05.680
每次得到的模式都不同

85
00:04:05.680 --> 00:04:08.060
那就表示这个算法或许不能对这个数据产生稳定的判断

86
00:04:08.060 --> 00:04:12.350
那就表示这个算法或许不能对这个数据产生稳定的判断

87
00:04:12.350 --> 00:04:14.651
因此 K 均值用在这一类的数据集上可能是有问题的

88
00:04:14.651 --> 00:04:18.238
因此 K 均值用在这一类的数据集上可能是有问题的

89
00:04:18.238 --> 00:04:21.648
这里 我有一些视频的链接 以及参考资料

90
00:04:21.648 --> 00:04:26.127
可以提供更多关于 K 均值的信息
【教育无边界字幕组】October Sky | 詹詹詹米 | hazard1990