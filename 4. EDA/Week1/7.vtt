WEBVTT

1
00:00:00.730 --> 00:00:04.710
R 语言中的图形设备 (graphic device) 非常重要 因为我们需要通过它们来进行绘图

2
00:00:04.710 --> 00:00:06.990
有许多不同类型的图形设备 都可用以绘图

3
00:00:06.990 --> 00:00:08.890
有许多不同类型的图形设备 都可用以绘图

4
00:00:08.890 --> 00:00:12.270
在这节视频中 我们将简略探讨下

5
00:00:12.270 --> 00:00:15.160
大部分 R 用户使用的几种不同的图形设备

6
00:00:16.700 --> 00:00:19.090
首先我们要问 图形设备是什么？

7
00:00:19.090 --> 00:00:21.890
简单来说 就是你能用来显示图像的设备

8
00:00:21.890 --> 00:00:24.980
简单来说 就是你能用来显示图像的设备

9
00:00:24.980 --> 00:00:25.860
最常见的图形显示设备 便是屏幕上的窗口了

10
00:00:25.860 --> 00:00:30.070
最常见的图形显示设备 便是屏幕上的窗口了

11
00:00:30.070 --> 00:00:31.820
当你打开 R 调用 plot()

12
00:00:31.820 --> 00:00:36.470
你的图像就会显示在一个图像视窗里

13
00:00:36.470 --> 00:00:37.870
这就叫做屏幕设备 (screen device)

14
00:00:38.980 --> 00:00:42.620
你还可以把图像发至其它地方 比如 (保存成) 文件

15
00:00:42.620 --> 00:00:44.420
文件有许多不同格式

16
00:00:44.420 --> 00:00:46.852
比如有 PDF 格式 PNG 格式

17
00:00:46.852 --> 00:00:50.750
JPEG 格式 以及 SVG (可缩放矢量图形) 格式等等

18
00:00:50.750 --> 00:00:50.970
因此 你可以从多种不同文件设备 (file device) 中选择

19
00:00:50.970 --> 00:00:52.750
因此 你可以从多种不同文件设备 (file device) 中选择

20
00:00:52.750 --> 00:00:56.240
并将图像传至该类文件中

21
00:00:57.660 --> 00:01:01.750
无论何时在 R 中绘制图像 你都需要将其发送至一个特定的图像设备

22
00:01:03.010 --> 00:01:06.400
否则图像就无法生成

23
00:01:06.400 --> 00:01:08.120
图像最常发送的目的地

24
00:01:08.120 --> 00:01:10.590
就是屏幕设备了

25
00:01:10.590 --> 00:01:13.032
在 Mac 系统中 这个屏幕设备称作 Quartz

26
00:01:13.032 --> 00:01:16.090
在 Windows 里称作 Windows

27
00:01:16.090 --> 00:01:18.940
而在 Unix/Linux 则称为 x11

28
00:01:22.740 --> 00:01:24.900
如果要想绘制图像

29
00:01:24.900 --> 00:01:27.850
首先就要决定 要在哪里显示该图像

30
00:01:27.850 --> 00:01:30.920
在这里的设备帮助页面中 你可以看到一个完整的设备列单 

31
00:01:30.920 --> 00:01:34.298
在这里的设备帮助页面中 你可以看到一个完整的设备列单 

32
00:01:34.298 --> 00:01:37.220
也有一些图形设备是由其他 CRAN 用户创建的

33
00:01:37.220 --> 00:01:42.210
通过安装相应的扩展包 你也可以在 R 中使用它们

34
00:01:42.210 --> 00:01:43.470
我们这里先不说那么远

35
00:01:43.470 --> 00:01:46.952
我主要会讲解 R 中自带的图形设备

36
00:01:46.952 --> 00:01:47.747
当你在绘制数据

37
00:01:47.747 --> 00:01:50.132
当你在绘制数据

38
00:01:50.132 --> 00:01:52.517
进行可视化和探索性分析 或阅览数据时

39
00:01:52.517 --> 00:01:56.430
会最常将图像发送至屏幕设备

40
00:01:56.430 --> 00:01:59.050
所以你可以直接调用各种图像函数 像是 plot( ) 和 xyplot( )

41
00:01:59.050 --> 00:02:03.040
又或是qplot( ) 和 ggplot2( ) 如此一来图像都会被发送到屏幕设备上

42
00:02:03.040 --> 00:02:06.302
这样你就能快速阅览数据

43
00:02:06.302 --> 00:02:08.600
并且以此来决定是否要对下一幅图像进行操作

44
00:02:10.090 --> 00:02:12.780
在各种平台上 不论是 Mac, Wnidows 还是 Unix

45
00:02:12.780 --> 00:02:15.600
都只有一个屏幕设备

46
00:02:15.600 --> 00:02:17.010
所以你就不必选择要将图像传至哪个屏幕设备上了

47
00:02:17.010 --> 00:02:18.610
所以你就不必选择要将图像传至哪个屏幕设备上了

48
00:02:18.610 --> 00:02:20.550
因为只有一个选择

49
00:02:20.550 --> 00:02:22.290
所以 完全不必操心

50
00:02:22.290 --> 00:02:24.790
但通常在你完成了一些探索性分析后

51
00:02:24.790 --> 00:02:26.760
但通常在你完成了一些探索性分析后

52
00:02:26.760 --> 00:02:30.960
你确定了哪些图像是你想保留的

53
00:02:30.960 --> 00:02:34.700
而哪些是你想发给其他人的

54
00:02:34.700 --> 00:02:37.970
这时你就需要用到其它类型的设备了

55
00:02:37.970 --> 00:02:39.390
比如文件设备

56
00:02:39.390 --> 00:02:42.780
在将图像传到文件后

57
00:02:42.780 --> 00:02:44.230
你可以将该文件添加进报告当中

58
00:02:44.230 --> 00:02:46.550
可以将其添加进你的幻灯片当中

59
00:02:46.550 --> 00:02:48.240
也可以通过邮件把这个文件发给别人

60
00:02:48.240 --> 00:02:52.470
这时就凸显了文件的优势

61
00:02:52.470 --> 00:02:55.160
文件设备有很多种类可供选择 这与屏幕设备不同

62
00:02:55.160 --> 00:02:58.120
这里我们会挑选其中几个来作讲解

63
00:02:59.480 --> 00:03:03.110
大家要注意 本节视频中提到的所有图形设备

64
00:03:03.110 --> 00:03:05.270
并不都能适用于各种平台

65
00:03:05.270 --> 00:03:09.010
比如 在 Mac 或 Unix 系统中就没有 Windows 设备

66
00:03:09.010 --> 00:03:13.060
类似地 在 Windows 系统中也没有 Quartz 设备

67
00:03:13.060 --> 00:03:16.290
所以 你没办法在所有平台上打开所有图形设备

68
00:03:18.650 --> 00:03:20.500
那么 图像是如何生成的

69
00:03:20.500 --> 00:03:21.880
答案看似明显

70
00:03:21.880 --> 00:03:24.530
但要生成图像 可不止一种方法

71
00:03:24.530 --> 00:03:28.480
第一种方法是最简单的方法

72
00:03:28.480 --> 00:03:31.400
或许也是你已熟悉的方法

73
00:03:31.400 --> 00:03:35.890
也就是调用绘图函数 例如 plot( ) xyplot( ) 或 qplot( )

74
00:03:35.890 --> 00:03:39.710
接着图像就会显示在屏幕设备上了

75
00:03:39.710 --> 00:03:44.356
你还可以通过像是 text( ) ,title( ) 或是 ac( ) 等函数

76
00:03:44.356 --> 00:03:47.500
来添加注释

77
00:03:47.500 --> 00:03:49.560
在完成注释后

78
00:03:49.560 --> 00:03:51.010
要是你对结果满意

79
00:03:51.010 --> 00:03:51.530
那就大功告成了

80
00:03:51.530 --> 00:03:53.210
图像已经显示在了屏幕上 你可以看到它

81
00:03:53.210 --> 00:03:55.548
你可以在屏幕上将其展示给其他人

82
00:03:55.548 --> 00:03:59.595
这串代码会先加载数据集 然后通过 plot( ) 绘制图像

83
00:03:59.595 --> 00:04:03.810
最后在图像顶部添加标题

84
00:04:03.810 --> 00:04:06.730
这种生成图像的方法非常简单

85
00:04:08.650 --> 00:04:09.810
另一种图像生成方式最常用于文件设备上

86
00:04:09.810 --> 00:04:12.390
另一种图像生成方式最常用于文件设备上

87
00:04:12.390 --> 00:04:15.450
这种方法需要直接开启一个图形设备

88
00:04:15.450 --> 00:04:17.500
你可以先打开一个文件设备

89
00:04:17.500 --> 00:04:20.120
通过绘图函数绘制图像

90
00:04:20.120 --> 00:04:22.560
如果你使用文件设备

91
00:04:22.560 --> 00:04:25.460
则会稍有难度

92
00:04:25.460 --> 00:04:27.910
因为图像并不会显示在屏幕上

93
00:04:27.910 --> 00:04:30.420
这是由于所有的绘图信息都会存入一个文件当中

94
00:04:30.420 --> 00:04:35.040
因此当你要在文件中创建绘图时 你必须清楚自己做的每一步

95
00:04:35.040 --> 00:04:37.720
因为你没法在屏幕上看到结果

96
00:04:37.720 --> 00:04:41.010
所以通常来说 最好的办法是

97
00:04:41.010 --> 00:04:43.950
在一个独立文件中保存绘图代码 这样一来

98
00:04:43.950 --> 00:04:46.640
你可以简单地将代码复制粘贴进 R

99
00:04:46.640 --> 00:04:49.660
这样你就不用担心在编程时出错了

100
00:04:50.990 --> 00:04:53.660
在生成图像后 可以根据需要添加注释

101
00:04:53.660 --> 00:04:57.520
之后必须使用 dev.off( ) 来关闭图形设备

102
00:04:57.520 --> 00:05:00.070
只有你关闭了图形设备

103
00:05:00.070 --> 00:05:02.570
绘图步骤才算完成 如果你将其传至一个文件

104
00:05:02.570 --> 00:05:05.010
你就可以在电脑上打开查看该文件

105
00:05:05.010 --> 00:05:06.480
或者将其添加进你的幻灯片中

106
00:05:06.480 --> 00:05:09.000
又或者将其发送给他人

107
00:05:09.000 --> 00:05:13.768
这里的这段代码 使用了 pdf( ) 打开了 PDF 设备

108
00:05:13.768 --> 00:05:18.340
你需要输入文件名 这里我将其命名为 myplot.pdf

109
00:05:18.340 --> 00:05:21.580
接着 绘制图形 添加注释

110
00:05:21.580 --> 00:05:25.310
最后使用 dev.off() 来关闭图形

111
00:05:25.310 --> 00:05:28.520
一旦使用 dev.off() 关闭了图像 在我的目录下

112
00:05:28.520 --> 00:05:32.960
应该就会出现一个名为 myplot.pdf 的文件 你可以通过 PDF 阅览器来开启它
【教育无边界字幕组】LennyBear | 大脸猫 | 詹詹詹米